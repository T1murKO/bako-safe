/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.73.0
  Forc version: 0.49.2
  Fuel-Core version: 0.22.0
*/

import {
  Account,
  Script,
} from 'fuels';

type ScriptAbiInputs = [tx: string];
type ScriptAbiOutput = void;

const _abi = {
  "types": [
    {
      "typeId": 0,
      "type": "()",
      "components": [],
      "typeParameters": null
    },
    {
      "typeId": 1,
      "type": "b256",
      "components": null,
      "typeParameters": null
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "tx",
          "type": 1,
          "typeArguments": null
        }
      ],
      "name": "main",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": null
    }
  ],
  "loggedTypes": [
    {
      "logId": 0,
      "loggedType": {
        "name": "",
        "type": 1,
        "typeArguments": null
      }
    }
  ],
  "messagesTypes": [],
  "configurables": []
}

const _bin = '0x740000034700000000000000000000345dfcc00110fff3001aec5000910000006140000a72440020340004112400000047000000'

export class ScriptAbi__factory {

  static readonly abi = _abi
  static readonly bin = _bin

  static createInstance(wallet: Account) {

    const { abi, bin } = ScriptAbi__factory

    const script = new Script<
      ScriptAbiInputs,
      ScriptAbiOutput
    >(bin, abi, wallet);

    return script;

  }

}
